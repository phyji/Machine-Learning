# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15Bfrc16N1wPVNsrK5MZU04KLRinWz6_Z
"""

import sklearn.datasets as dta
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

breast_cancer = dta.load_breast_cancer()
print(breast_cancer)

data_frame = pd.DataFrame(data = breast_cancer.data, columns=breast_cancer.feature_names)
data_frame

data_frame['label'] = breast_cancer.target
data_frame.describe()

X = data_frame.drop(columns='label', axis=1)
Y = data_frame['label']

Xtrain, Xtest, Ytrain, Ytest = train_test_split(X, Y, test_size=0.2, random_state=2)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

Xtrain_std = scaler.fit_transform(Xtrain)

Xtest_std = scaler.fit_transform(Xtest)

# import tensorflow dan keras
import tensorflow as tf
tf.random.set_seed(3)
from tensorflow import keras

# mengatur lapisan dari neural network
model = keras.Sequential([
      keras.layers.Flatten(input_shape=(30,)),
      keras.layers.Dense(20, activation='relu'),
      keras.layers.Dense(2, activation='sigmoid')
])

# commpile neural network
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# melatih neural network
history = model.fit(Xtrain, Ytrain, validation_split=0.1, epochs=30)

# visualisasi akurasi dan loss
plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])

plt.title("model akurasi")
plt.ylabel('akurasi')
plt.xlabel('epoch')

plt.legend(['training data', 'validation data'], loc='lower right')

# akurasi model dengan test data
loss, accuracy = model.evaluate(Xtest_std, Ytest)
print(accuracy)

Ypred = model.predict(Xtest)

print(Ypred.shape)

